apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.global.jobName }}
  namespace: {{ .Values.global.namespaceScanner }}
spec:
  template:
    spec:
      serviceAccountName: {{ .Values.global.serviceaccount }}
      serviceAccount: {{ .Values.global.serviceaccount }}
      containers:
        - name: patcher
          image: {{ .Values.global.image }}
          command:
            - /bin/sh
            - -c
            - |
              set -xv
             
              
              upload_config_url_encoded=$(kubectl get configmap ibm-licensing-upload-config -n {{ .Values.global.namespaceIls }} -o jsonpath='{.data.url}' | tr -d '\n' | base64 | tr -d '\n') 
              upload_config_cert_encoded=$(kubectl get configmap ibm-licensing-upload-config -n {{ .Values.global.namespaceIls }} -o jsonpath='{.data.crt\.pem}' | base64 | tr -d '\n'| tr -d ' ' )
              upload_config_token_encoded=$(kubectl get secret ibm-licensing-upload-token -n {{ .Values.global.namespaceIls }} -o jsonpath='{.data.token-upload}' )

              echo "
              kind: Secret
              apiVersion: v1
              metadata:
                namespace: $NAMESPACE_SCANNER
                name: ibm-licensing-scanner-upload-secret
              data:
                url: "$upload_config_url_encoded"
                token: "$upload_config_token_encoded"
                crt.pem: "$upload_config_cert_encoded"
              " | kubectl apply -f -

              
            
      restartPolicy: Never
